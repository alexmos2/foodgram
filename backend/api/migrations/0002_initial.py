# Generated by Django 3.2.3 on 2025-01-08 09:18

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('api', '0001_initial'),
    ]

    operations = [
        migrations.AddField(
            model_name='subscription',
            name='author',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='following', to=settings.AUTH_USER_MODEL, verbose_name='Отслеживаемый автор'),
        ),
        migrations.AddField(
            model_name='subscription',
            name='user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='follower', to=settings.AUTH_USER_MODEL, verbose_name='Подписчик'),
        ),
        migrations.AddField(
            model_name='shoppinglist',
            name='receipt',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='shopping_list', to='api.receipt', verbose_name='В списке у юзеров'),
        ),
        migrations.AddField(
            model_name='shoppinglist',
            name='user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='shopping_list', to=settings.AUTH_USER_MODEL, verbose_name='Покупки'),
        ),
        migrations.AddField(
            model_name='receipt',
            name='author',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='author_receipts', to=settings.AUTH_USER_MODEL, verbose_name='Автор рецепта'),
        ),
        migrations.AddField(
            model_name='receipt',
            name='ingredients',
            field=models.ManyToManyField(through='api.IngredientReceipt', to='api.Ingredient', verbose_name='Ингридиенты'),
        ),
        migrations.AddField(
            model_name='receipt',
            name='tags',
            field=models.ManyToManyField(through='api.TagReceipt', to='api.Tag', verbose_name='Ингридиенты'),
        ),
        migrations.AddField(
            model_name='ingredientreceipt',
            name='ingredient',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='ingredients_in_receipt', to='api.ingredient', verbose_name='Рецепты'),
        ),
        migrations.AddField(
            model_name='ingredientreceipt',
            name='receipt',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='receipts', to='api.receipt', verbose_name='Ингредиенты'),
        ),
        migrations.AddField(
            model_name='favorite',
            name='receipt',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='favorites_of_users', to='api.receipt', verbose_name='Избранное юзеров'),
        ),
        migrations.AddField(
            model_name='favorite',
            name='user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='favorites', to=settings.AUTH_USER_MODEL, verbose_name='Избранные рецепты'),
        ),
        migrations.AddConstraint(
            model_name='tagreceipt',
            constraint=models.UniqueConstraint(fields=('tag', 'receipt'), name='unique_pair_tags_receipts'),
        ),
        migrations.AddConstraint(
            model_name='subscription',
            constraint=models.UniqueConstraint(fields=('user', 'author'), name='unique_following'),
        ),
        migrations.AddConstraint(
            model_name='shoppinglist',
            constraint=models.UniqueConstraint(fields=('user', 'receipt'), name='unique_receipt'),
        ),
        migrations.AddConstraint(
            model_name='ingredientreceipt',
            constraint=models.UniqueConstraint(fields=('receipt', 'ingredient'), name='unique_ingredient'),
        ),
        migrations.AddConstraint(
            model_name='favorite',
            constraint=models.UniqueConstraint(fields=('user', 'receipt'), name='unique_favorite'),
        ),
    ]
